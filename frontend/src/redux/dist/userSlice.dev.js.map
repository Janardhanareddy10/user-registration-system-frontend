{"version":3,"sources":["userSlice.js"],"names":["API_URL","fetchUsers","axios","get","response","data","fetchUserById","id","createUser","userData","post","updateUser","console","log","put","error","message","deleteUser","userSlice","name","initialState","users","user","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","push","index","findIndex","_id","filter","reducer"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,OAAO,GAAG,2DAAhB,C,CAEA;;AACO,IAAMC,UAAU,GAAG,+BAAiB,kBAAjB,EAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACtCC,kBAAMC,GAAN,CAAUH,OAAV,CADsC;;AAAA;AACvDI,UAAAA,QADuD;AAAA,2CAEtDA,QAAQ,CAACC,IAF6C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArC,CAAnB,C,CAKP;;;AACO,IAAMC,aAAa,GAAG,+BAAiB,qBAAjB,EAAwC,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAC5CL,kBAAMC,GAAN,WAAaH,OAAb,cAAwBO,EAAxB,EAD4C;;AAAA;AAC7DH,UAAAA,QAD6D;AAAA,4CAE5DA,QAAQ,CAACC,IAFmD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxC,CAAtB,C,CAKP;;;AACO,IAAMG,UAAU,GAAG,+BAAiB,kBAAjB,EAAqC,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACtCP,kBAAMQ,IAAN,CAAWV,OAAX,EAAoBS,QAApB,CADsC;;AAAA;AACvDL,UAAAA,QADuD;AAAA,4CAEtDA,QAAQ,CAACC,IAF6C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArC,CAAnB,C,CAKP;;;AACO,IAAMM,UAAU,GAAG,+BAAiB,kBAAjB,EAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAASJ,UAAAA,EAAT,QAASA,EAAT,EAAaE,QAAb,QAAaA,QAAb;AAAA;AAE3DG,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC;AAAEN,YAAAA,EAAE,EAAFA,EAAF;AAAME,YAAAA,QAAQ,EAARA;AAAN,WAAvC;AAF2D;AAAA,0CAGpCP,kBAAMY,GAAN,WAAad,OAAb,cAAwBO,EAAxB,GAA8BE,QAA9B,CAHoC;;AAAA;AAGrDL,UAAAA,QAHqD;AAI3DQ,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCT,QAAQ,CAACC,IAAzC;AAJ2D,4CAKpDD,QAAQ,CAACC,IAL2C;;AAAA;AAAA;AAAA;AAO3DO,UAAAA,OAAO,CAACG,KAAR,CAAc,sBAAd,EAAsC,aAAMX,QAAN,GAAiB,aAAMA,QAAN,CAAeC,IAAhC,GAAuC,aAAMW,OAAnF;AAP2D;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArC,CAAnB,C,CAYP;;;AACO,IAAMC,UAAU,GAAG,+BAAiB,kBAAjB,EAAqC,kBAAOV,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACvDL,sCAAgBF,OAAhB,cAA2BO,EAA3B,EADuD;;AAAA;AAAA,4CAEtDA,EAFsD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArC,CAAnB;;AAKP,IAAMW,SAAS,GAAG,0BAAY;AAC5BC,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,IAAI,EAAE,IAFM;AAGZC,IAAAA,OAAO,EAAE,KAHG;AAIZR,IAAAA,KAAK,EAAE;AAJK,GAFc;AAQ5BS,EAAAA,QAAQ,EAAE,EARkB;AAS5BC,EAAAA,aAAa,EAAE,uBAACC,OAAD,EAAa;AAC1BA,IAAAA,OAAO,CACJC,OADH,CACW1B,UAAU,CAAC2B,OADtB,EAC+B,UAACC,KAAD,EAAW;AAAEA,MAAAA,KAAK,CAACN,OAAN,GAAgB,IAAhB;AAAuB,KADnE,EAEGI,OAFH,CAEW1B,UAAU,CAAC6B,SAFtB,EAEiC,UAACD,KAAD,EAAQE,MAAR,EAAmB;AAChDF,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACAM,MAAAA,KAAK,CAACR,KAAN,GAAcU,MAAM,CAACC,OAArB;AACD,KALH,EAMGL,OANH,CAMW1B,UAAU,CAACgC,QANtB,EAMgC,UAACJ,KAAD,EAAQE,MAAR,EAAmB;AAC/CF,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACAM,MAAAA,KAAK,CAACd,KAAN,GAAcgB,MAAM,CAAChB,KAAP,CAAaC,OAA3B;AACD,KATH,EAUGW,OAVH,CAUWrB,aAAa,CAACwB,SAVzB,EAUoC,UAACD,KAAD,EAAQE,MAAR,EAAmB;AAAEF,MAAAA,KAAK,CAACP,IAAN,GAAaS,MAAM,CAACC,OAApB;AAA8B,KAVvF,EAWGL,OAXH,CAWWnB,UAAU,CAACsB,SAXtB,EAWiC,UAACD,KAAD,EAAQE,MAAR,EAAmB;AAAEF,MAAAA,KAAK,CAACR,KAAN,CAAYa,IAAZ,CAAiBH,MAAM,CAACC,OAAxB;AAAmC,KAXzF,EAYGL,OAZH,CAYWhB,UAAU,CAACmB,SAZtB,EAYiC,UAACD,KAAD,EAAQE,MAAR,EAAmB;AAChD,UAAMI,KAAK,GAAGN,KAAK,CAACR,KAAN,CAAYe,SAAZ,CAAsB,UAAAd,IAAI;AAAA,eAAIA,IAAI,CAACe,GAAL,KAAaN,MAAM,CAACC,OAAP,CAAeK,GAAhC;AAAA,OAA1B,CAAd;AACA,UAAIF,KAAK,KAAK,CAAC,CAAf,EAAkBN,KAAK,CAACR,KAAN,CAAYc,KAAZ,IAAqBJ,MAAM,CAACC,OAA5B;AACnB,KAfH,EAgBGL,OAhBH,CAgBWV,UAAU,CAACa,SAhBtB,EAgBiC,UAACD,KAAD,EAAQE,MAAR,EAAmB;AAChDF,MAAAA,KAAK,CAACR,KAAN,GAAcQ,KAAK,CAACR,KAAN,CAAYiB,MAAZ,CAAmB,UAAAhB,IAAI;AAAA,eAAIA,IAAI,CAACe,GAAL,KAAaN,MAAM,CAACC,OAAxB;AAAA,OAAvB,CAAd;AACD,KAlBH;AAmBD;AA7B2B,CAAZ,CAAlB;eAgCed,SAAS,CAACqB,O","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = \"https://user-registration-system-7.onrender.com/api/users\";\r\n\r\n// ✅ Fetch all users\r\nexport const fetchUsers = createAsyncThunk(\"users/fetchUsers\", async () => {\r\n  const response = await axios.get(API_URL);\r\n  return response.data;\r\n});\r\n\r\n// ✅ Get user by ID\r\nexport const fetchUserById = createAsyncThunk(\"users/fetchUserById\", async (id) => {\r\n  const response = await axios.get(`${API_URL}/${id}`);\r\n  return response.data;\r\n});\r\n\r\n// ✅ Create a new user\r\nexport const createUser = createAsyncThunk(\"users/createUser\", async (userData) => {\r\n  const response = await axios.post(API_URL, userData);\r\n  return response.data;\r\n});\r\n\r\n// ✅ Update user\r\nexport const updateUser = createAsyncThunk(\"users/updateUser\", async ({ id, userData }) => {\r\n  try {\r\n    console.log(\"Sending update request:\", { id, userData });\r\n    const response = await axios.put(`${API_URL}/${id}`, userData);\r\n    console.log(\"Update response:\", response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error updating user:\", error.response ? error.response.data : error.message);\r\n    throw error;\r\n  }\r\n});\r\n\r\n// ✅ Delete user\r\nexport const deleteUser = createAsyncThunk(\"users/deleteUser\", async (id) => {\r\n  await axios.delete(`${API_URL}/${id}`);\r\n  return id;\r\n});\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    users: [],\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchUsers.pending, (state) => { state.loading = true; })\r\n      .addCase(fetchUsers.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.users = action.payload;\r\n      })\r\n      .addCase(fetchUsers.rejected, (state, action) => { \r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(fetchUserById.fulfilled, (state, action) => { state.user = action.payload; })\r\n      .addCase(createUser.fulfilled, (state, action) => { state.users.push(action.payload); })\r\n      .addCase(updateUser.fulfilled, (state, action) => {\r\n        const index = state.users.findIndex(user => user._id === action.payload._id);\r\n        if (index !== -1) state.users[index] = action.payload;\r\n      })\r\n      .addCase(deleteUser.fulfilled, (state, action) => {\r\n        state.users = state.users.filter(user => user._id !== action.payload);\r\n      });\r\n  },\r\n});\r\n\r\nexport default userSlice.reducer;\r\n"],"file":"userSlice.dev.js"}