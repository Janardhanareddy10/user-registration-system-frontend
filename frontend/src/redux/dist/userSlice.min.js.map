{"version":3,"sources":["userSlice.js"],"names":["_toolkit","require","_axios","_interopRequireDefault","API_URL","fetchUsers","createAsyncThunk","response","regeneratorRuntime","async","_context","prev","next","awrap","axios","get","sent","abrupt","data","stop","fetchUserById","id","_context2","concat","createUser","userData","_context3","post","updateUser","_ref","_context4","console","log","put","t0","error","message","_context5","userSlice","createSlice","name","initialState","users","user","reducers","extraReducers","builder","addCase","pending","state","loading","fulfilled","action","payload","rejected","push","index","findIndex","_id","deleteUser","filter","reducer"],"mappings":"6LAAA,IAAAA,SAAAC,QAAA,oBACAC,OAAAC,uBAAAF,QAAA,kFAEA,IAAMG,QAAU,kCAGHC,YAAa,EAAAL,SAAAM,kBAAiB,mBAAoB,WAAA,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,MAN/DC,OAAAA,QAAAC,IAAAX,UAM+D,KAAA,EAAA,OAN/DG,EAM+DG,EAAAM,KAAAN,EAAAO,OAAA,SAEtDV,EAASW,MAF6C,KAAA,EAAA,IAAA,MAAA,OAAAR,EAAAS,0CAMxD,IAAMC,eAAgB,EAAApB,SAAAM,kBAAiB,sBAAuB,SAAOe,GAAP,IAAAd,EAAA,OAAAC,mBAAAC,MAAA,SAAAa,GAAA,OAAA,OAAAA,EAAAX,KAAAW,EAAAV,MAAA,KAAA,EAAA,OAAAU,EAAAV,KAAA,EAAAJ,mBAAAK,MATrDC,OAAAA,QAAAC,IAAA,GAAAQ,OAAAnB,QAAA,KAAAmB,OAEhBF,KAOqE,KAAA,EAAA,OAT/DjB,EAS+DkB,EAAAN,KAAAM,EAAAL,OAAA,SAE5DV,EAASW,MAFmD,KAAA,EAAA,IAAA,MAAA,OAAAI,EAAAH,gDANN,IAAAK,YAAA,EAAAxB,SAAAM,kBAAA,mBAAA,SAAAmB,GAAA,IAAAlB,EAAA,OAAAC,mBAAAC,MAAA,SAAAiB,GAAA,OAAA,OAAAA,EAAAf,KAAAe,EAAAd,MAAA,KAAA,EAAA,OAAAc,EAAAd,KAAA,EAAAJ,mBAAAK,MAAAC,OAAAA,QAAAa,KAAAvB,QAAAqB,IAAA,KAAA,EAAA,OAAAlB,EAAAmB,EAAAV,KAAAU,EAAAT,OAAA,SAAAV,EAAAW,MAAA,KAAA,EAAA,IAAA,MAAA,OAAAQ,EAAAP,0CAAA,IAAAS,YAAA,EAAA5B,SAAAM,kBAAA,mBAAA,SAAAuB,GAAA,IAAAR,EAAAI,EAAAlB,EAAA,OAAAC,mBAAAC,MAAA,SAAAqB,GAAA,OAAA,OAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,KAAA,EAAA,OAAAS,EAAAQ,EAAAR,GAAAI,EAAAI,EAAAJ,SAAAK,EAAAnB,KAAA,EAAAoB,QAAAC,IAAA,0BAEtDzB,CAAAA,GAAAA,EAAAA,SAAAA,IAFsDuB,EAAAlB,KAAA,EAAAJ,mBAAAK,MAqBpCC,OAAAA,QAAMmB,IAAN,GAAAV,OAAanB,QAAb,KAAAmB,OAAwBF,GAAMI,IArBM,KAAA,EAAA,OAqBrDlB,EArBqDuB,EAAAd,KAAAe,QAAAC,IAAA,mBAAAzB,EAAAW,MAAAY,EAAAb,OAAA,SAAAV,EAAAW,MAAA,KAAA,GAAA,MAAAY,EAAAnB,KAAA,GAAAmB,EAAAI,GAAAJ,EAAA,MAAA,GAAAC,QAAAI,MAAA,uBAAAL,EAAAI,GAAA3B,SAAAuB,EAAAI,GAAA3B,SAAAW,KAAAY,EAAAI,GAAAE,SAAAN,EAAAI,GAAA,KAAA,GAAA,IAAA,MAAA,OAAAJ,EAAAX,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,sCAMlDC,IAAAA,YAAgB,EAAApB,SAAAM,kBAAA,mBAAiB,SAAAe,GAAA,OAAAb,mBAAAC,MAAA,SAAA4B,GAAA,OAAA,OAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,KAAA,EAAA,OAAAyB,EAAAzB,KAAA,EAAAJ,mBAAAK,MAAuBC,OAAAA,QAAAA,OAAAA,GAAAA,OAAAV,QAAA,KAAAmB,OAAAF,KAAvB,KAAA,EAAA,OAAAgB,EAAApB,OAAA,SAAuBI,GAAvB,KAAA,EAAA,IAAA,MAAA,OAAAgB,EAAAlB,0CAAuB,IAAAmB,WAAA,EAAAtC,SAAAuC,aAAA,CAAAC,KAAA,OAAAC,aAAA,CAiCjEC,MAAO,GAjC0DC,KAAA,KAC7DpC,SAAAA,EAD6D4B,MAAA,MAAAS,SAAA,GAAAC,cAAA,SAAAC,GAAAA,EAAAC,QAAA1C,WAAA2C,QAAA,SAAAC,GAAAA,EAAAC,SAAA,IAAAH,QAAA1C,WAAA8C,UAAA,SAAAF,EAAAG,GAAAH,EAAAC,SAAA,EAKrED,EAAAP,MAAAU,EAAAC,UAyCON,QAAQ1C,WAAWiD,SAAU,SAACL,EAAOG,GAxC/B5B,EAAU0B,SAAG,EAAqCD,EAAAd,MAAAiB,EAAAjB,MAAAC,UAAAW,QAAA3B,cAAA+B,UAAA,SAAAF,EAAAG,GAAAH,EAAAN,KAAAS,EAAAC,UAAAN,QAAAvB,WAAA2B,UAAA,SAAAF,EAAAG,GAAAH,EAAAP,MAAAa,KAAAH,EAAAC,WAAAN,QAAAnB,WAAAuB,UAAA,SAAAF,EAAAG,GAAA,IAAAI,EAAAP,EAAAP,MAAAe,UAAA,SAAAd,GAAA,OAAAA,EAAAe,MAAAN,EAAAC,QAAAK,OAAA,IAAAF,IAAAP,EAAAP,MAAAc,GACtC1C,EAAAA,WADsCiC,QAAAY,WAAAR,UAAA,SAAAF,EAAAG,GACvD7C,EAAAA,MADuD0C,EAAAP,MAAAkB,OAAA,SAAAjB,GAAA,OAAAA,EAAAe,MAAAN,EAAAC,wBAAAf,UAAAuB","file":"userSlice.min.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api/users\";\r\n\r\n// ✅ Fetch all users\r\nexport const fetchUsers = createAsyncThunk(\"users/fetchUsers\", async () => {\r\n  const response = await axios.get(API_URL);\r\n  return response.data;\r\n});\r\n\r\n// ✅ Get user by ID\r\nexport const fetchUserById = createAsyncThunk(\"users/fetchUserById\", async (id) => {\r\n  const response = await axios.get(`${API_URL}/${id}`);\r\n  return response.data;\r\n});\r\n\r\n// ✅ Create a new user\r\nexport const createUser = createAsyncThunk(\"users/createUser\", async (userData) => {\r\n  const response = await axios.post(API_URL, userData);\r\n  return response.data;\r\n});\r\n\r\n// ✅ Update user\r\nexport const updateUser = createAsyncThunk(\"users/updateUser\", async ({ id, userData }) => {\r\n  try {\r\n    console.log(\"Sending update request:\", { id, userData });\r\n    const response = await axios.put(`${API_URL}/${id}`, userData);\r\n    console.log(\"Update response:\", response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error updating user:\", error.response ? error.response.data : error.message);\r\n    throw error;\r\n  }\r\n});\r\n\r\n// ✅ Delete user\r\nexport const deleteUser = createAsyncThunk(\"users/deleteUser\", async (id) => {\r\n  await axios.delete(`${API_URL}/${id}`);\r\n  return id;\r\n});\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    users: [],\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchUsers.pending, (state) => { state.loading = true; })\r\n      .addCase(fetchUsers.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.users = action.payload;\r\n      })\r\n      .addCase(fetchUsers.rejected, (state, action) => { \r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(fetchUserById.fulfilled, (state, action) => { state.user = action.payload; })\r\n      .addCase(createUser.fulfilled, (state, action) => { state.users.push(action.payload); })\r\n      .addCase(updateUser.fulfilled, (state, action) => {\r\n        const index = state.users.findIndex(user => user._id === action.payload._id);\r\n        if (index !== -1) state.users[index] = action.payload;\r\n      })\r\n      .addCase(deleteUser.fulfilled, (state, action) => {\r\n        state.users = state.users.filter(user => user._id !== action.payload);\r\n      });\r\n  },\r\n});\r\n\r\nexport default userSlice.reducer;\r\n"]}